var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = BinaryHypervectors","category":"page"},{"location":"#BinaryHypervectors","page":"Home","title":"BinaryHypervectors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BinaryHypervectors.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BinaryHypervectors]","category":"page"},{"location":"#Base.bind-Tuple{BitVector, BitVector}","page":"Home","title":"Base.bind","text":"bind(x, y)\n\nBind two vectors using XOR. Applied efficiently by exploiting the chunk structure of BitVectors.\n\n\n\n\n\n","category":"method"},{"location":"#BinaryHypervectors.bundle-Tuple","page":"Home","title":"BinaryHypervectors.bundle","text":"bundle(vecs...)\n\nBundle  vectors using majority rule.\n\n\n\n\n\n","category":"method"},{"location":"#BinaryHypervectors.hammingsimilarity-Tuple{Any, Any}","page":"Home","title":"BinaryHypervectors.hammingsimilarity","text":"hammingsimilarity(x, y)\n\nCompute 1 minus the normalized Hamming distance between the vectors x and y. Uses chunk structure of BitVectors for speed.\n\n\n\n\n\n","category":"method"}]
}
